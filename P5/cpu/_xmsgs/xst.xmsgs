<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompilers" num="301" delta="old" ><arg fmt="%s" index="1">&quot;RF.v&quot; line 47 </arg>Too many digits specified in hex constant
</msg>

<msg type="warning" file="HDLCompilers" num="301" delta="old" ><arg fmt="%s" index="1">&quot;RF.v&quot; line 56 </arg>Too many digits specified in hex constant
</msg>

<msg type="warning" file="HDLCompilers" num="38" delta="new" ><arg fmt="%s" index="1">&quot;IFU.v&quot; line 3 </arg>Macro &apos;<arg fmt="%s" index="2">REPOSITION_PC</arg>&apos; redefined
</msg>

<msg type="warning" file="HDLCompilers" num="38" delta="new" ><arg fmt="%s" index="1">&quot;const.v&quot; line 2 </arg>Macro &apos;<arg fmt="%s" index="2">REPOSITION_PC</arg>&apos; redefined
</msg>

<msg type="warning" file="HDLCompilers" num="301" delta="old" ><arg fmt="%s" index="1">&quot;ALU.v&quot; line 45 </arg>Too many digits specified in hex constant
</msg>

<msg type="warning" file="HDLCompilers" num="301" delta="new" ><arg fmt="%s" index="1">&quot;mips.v&quot; line 120 </arg>Too many digits specified in hex constant
</msg>

<msg type="warning" file="HDLCompilers" num="301" delta="new" ><arg fmt="%s" index="1">&quot;mips.v&quot; line 131 </arg>Too many digits specified in hex constant
</msg>

<msg type="warning" file="HDLCompilers" num="259" delta="new" ><arg fmt="%s" index="1">&quot;mips.v&quot; line 309 </arg>Connection to input port &apos;<arg fmt="%s" index="2">DMOp</arg>&apos; does not match port size
</msg>

<msg type="info" file="Xst" num="2546" delta="old" >&quot;<arg fmt="%s" index="1">IFU.v</arg>&quot; line <arg fmt="%d" index="2">37</arg>: reading initialization file &quot;<arg fmt="%s" index="3">code.txt</arg>&quot;.
</msg>

<msg type="warning" file="Xst" num="2319" delta="old" >&quot;<arg fmt="%s" index="1">IFU.v</arg>&quot; line <arg fmt="%d" index="2">37</arg>: Signal <arg fmt="%s" index="3">IM</arg> in initial block is partially initialized. The initialization will be ignored.
</msg>

<msg type="warning" file="Xst" num="863" delta="old" >&quot;<arg fmt="%s" index="1">CU.v</arg>&quot; line <arg fmt="%d" index="2">44</arg>: Name conflict (<arg fmt="%s" index="3">&lt;jr&gt; and &lt;Jr&gt;, renaming jr as jr_rnm0</arg>).
</msg>

<msg type="warning" file="Xst" num="863" delta="old" >&quot;<arg fmt="%s" index="1">CU.v</arg>&quot; line <arg fmt="%d" index="2">40</arg>: Name conflict (<arg fmt="%s" index="3">&lt;lui&gt; and &lt;Lui&gt;, renaming lui as lui_rnm0</arg>).
</msg>

<msg type="warning" file="Xst" num="2321" delta="old" >&quot;<arg fmt="%s" index="1">RF.v</arg>&quot; line <arg fmt="%d" index="2">62</arg>: Parameter <arg fmt="%d" index="3">2</arg> (<arg fmt="%s" index="4">$time</arg>) is not supported in call of system task <arg fmt="%s" index="5">$display</arg>.
</msg>

<msg type="warning" file="Xst" num="2323" delta="old" >&quot;<arg fmt="%s" index="1">RF.v</arg>&quot; line <arg fmt="%d" index="2">62</arg>: Parameter <arg fmt="%d" index="3">3</arg> is not constant in call of system task <arg fmt="%s" index="4">$display</arg>.
</msg>

<msg type="warning" file="Xst" num="2323" delta="old" >&quot;<arg fmt="%s" index="1">RF.v</arg>&quot; line <arg fmt="%d" index="2">62</arg>: Parameter <arg fmt="%d" index="3">4</arg> is not constant in call of system task <arg fmt="%s" index="4">$display</arg>.
</msg>

<msg type="warning" file="Xst" num="2323" delta="old" >&quot;<arg fmt="%s" index="1">RF.v</arg>&quot; line <arg fmt="%d" index="2">62</arg>: Parameter <arg fmt="%d" index="3">5</arg> is not constant in call of system task <arg fmt="%s" index="4">$display</arg>.
</msg>

<msg type="error" file="Xst" num="880" delta="old" >&quot;<arg fmt="%s" index="1">DE_REG.v</arg>&quot; line <arg fmt="%d" index="2">78</arg>: Cannot mix blocking and non blocking assignments on signal &lt;<arg fmt="%s" index="3">E_b_jump</arg>&gt;.
</msg>

</messages>

